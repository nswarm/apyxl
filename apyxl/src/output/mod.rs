use anyhow::Result;
use std::fmt::Debug;

use crate::model::chunk;
pub use buffer::Buffer;
pub use chunk_buffer::ChunkBuffer;
pub use file_set::FileSet;
pub use indent::Indented;
pub use stdout::StdOut;

mod buffer;
mod chunk_buffer;
mod file_set;
mod indent;
mod stdout;

/// An [Output] translates data generated by an apyxl [Generator] to some output format.
pub trait Output: Debug {
    /// Start a new chunk. This should be used to acquire new resources for writing the chunk
    /// data such as opening a file.
    fn write_chunk(&mut self, chunk: &chunk::Chunk) -> Result<()>;
    fn write(&mut self, data: &str) -> Result<()>;
    fn write_char(&mut self, data: char) -> Result<()>;
    fn newline(&mut self) -> Result<()>;
}
